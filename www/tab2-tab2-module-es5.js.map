{"version":3,"sources":["webpack:///src/app/services/photo.service.ts","webpack:///src/app/tab2/tab2.module.ts","webpack:///src/app/tab2/tab2.page.html","webpack:///src/app/tab2/tab2.page.ts"],"names":["Camera","Filesystem","Storage","PhotoService","platform","photos","PHOTO_STORAGE","convertBlobToBase64","blob","Promise","resolve","reject","reader","FileReader","onerror","onload","result","readAsDataURL","get","key","photoList","JSON","parse","value","is","photo","readFile","path","filepath","directory","Data","webviewPath","data","getPhoto","resultType","Uri","source","quality","capturedPhoto","savePicture","savedImageFile","unshift","set","stringify","Photos","cameraPhoto","readAsBase64","base64Data","fileName","Date","getTime","writeFile","savedFile","uri","convertFileSrc","webPath","file","fetch","response","position","splice","filename","substr","lastIndexOf","deleteFile","providedIn","Tab2PageModule","forChild","component","imports","declarations","Tab2Page","photoService","actionSheetController","plt","actionSheetCtrl","loadSaved","create","header","buttons","text","role","icon","handler","deletePicture","actionSheet","present","addNewToGallery","addNewFromGallery","selectImageSource","selector","templateUrl","styleUrls"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gCAIwC,uD;QAAhCA,M,yBAAAA,M;QAAQC,U,yBAAAA,U;QAAYC,O,yBAAAA,O;;QAKfC,Y;AAKX,4BAAYC,QAAZ,EAAgC;AAAA;;AAJzB,aAAAC,MAAA,GAAkB,EAAlB;AACC,aAAAC,aAAA,GAAwB,QAAxB;;AAoJR,aAAAC,mBAAA,GAAsB,UAACC,IAAD;AAAA,iBAAgB,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACrE,gBAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,kBAAM,CAACE,OAAP,GAAiBH,MAAjB;;AACAC,kBAAM,CAACG,MAAP,GAAgB,YAAM;AAClBL,qBAAO,CAACE,MAAM,CAACI,MAAR,CAAP;AACH,aAFD;;AAGAJ,kBAAM,CAACK,aAAP,CAAqBT,IAArB;AACD,WAPqC,CAAhB;AAAA,SAAtB;;AAhJE,aAAKJ,QAAL,GAAgBA,QAAhB;AACA;;;;oCAEuB;;;;;;;;;AAEL,2BAAMF,OAAO,CAACgB,GAAR,CAAY;AAAEC,yBAAG,EAAE,KAAKb;AAAZ,qBAAZ,CAAN;;;AAAZc,6B;AACN,yBAAKf,MAAL,GAAcgB,IAAI,CAACC,KAAL,CAAWF,SAAS,CAACG,KAArB,KAA+B,EAA7C,C,CAEA;;wBACK,KAAKnB,QAAL,CAAcoB,EAAd,CAAiB,QAAjB,C;;;;;AACH;2DACkB,KAAKnB,M;;;;;;;;;;;AAAdoB,yB;;AAEU,2BAAMxB,UAAU,CAACyB,QAAX,CAAoB;AACvCC,0BAAI,EAAEF,KAAK,CAACG,QAD2B;AAEvCC,+BAAS,EAAE,oEAAoBC;AAFQ,qBAApB,CAAN;;;AAAXJ,4B;AAKN;AACAD,yBAAK,CAACM,WAAN,oCAA8CL,QAAQ,CAACM,IAAvD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGL;AAED;;;;;;;;;;;;0CAS+B;;;;;;;;AAEP,2BAAMhC,MAAM,CAACiC,QAAP,CAAgB;AAC1CC,gCAAU,EAAE,iEAAiBC,GADa;AAE1CC,4BAAM,EAAE,6DAAapC,MAFqB;AAG1CqC,6BAAO,EAAE,GAHiC,CAG7B;;AAH6B,qBAAhB,CAAN;;;AAAhBC,iC;;AAMiB,2BAAM,KAAKC,WAAL,CAAiBD,aAAjB,CAAN;;;AAAjBE,kC;AAEN;AACA,yBAAKnC,MAAL,CAAYoC,OAAZ,CAAoBD,cAApB,E,CAEA;;AACAtC,2BAAO,CAACwC,GAAR,CAAY;AACVvB,yBAAG,EAAE,KAAKb,aADA;AAEViB,2BAAK,EAAEF,IAAI,CAACsB,SAAL,CAAe,KAAKtC,MAApB;AAFG,qBAAZ;;;;;;;;;AAID;;;4CAEyB;;;;;;;;AAEF,2BAAML,MAAM,CAACiC,QAAP,CAAgB;AAC1CC,gCAAU,EAAE,iEAAiBC,GADa;AAE1CC,4BAAM,EAAE,6DAAaQ,MAFqB;AAG1CP,6BAAO,EAAE,GAHiC,CAG7B;;AAH6B,qBAAhB,CAAN;;;AAAhBC,iC;;AAMiB,2BAAM,KAAKC,WAAL,CAAiBD,aAAjB,CAAN;;;AAAjBE,kC;AAEN;AACA,yBAAKnC,MAAL,CAAYoC,OAAZ,CAAoBD,cAApB,E,CAEA;;AACAtC,2BAAO,CAACwC,GAAR,CAAY;AACVvB,yBAAG,EAAE,KAAKb,aADA;AAEViB,2BAAK,EAAEF,IAAI,CAACsB,SAAL,CAAe,KAAKtC,MAApB;AAFG,qBAAZ;;;;;;;;;AAKD,S,CAED;;;;oCAC0BwC,W,EAA0B;;;;;;;;AAE/B,2BAAM,KAAKC,YAAL,CAAkBD,WAAlB,CAAN;;;AAAbE,8B;AAEN;AACMC,4B,GAAW,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,O;;AACtB,2BAAMjD,UAAU,CAACkD,SAAX,CAAqB;AAC3CxB,0BAAI,EAAEqB,QADqC;AAE3ChB,0BAAI,EAAEe,UAFqC;AAG3ClB,+BAAS,EAAE,oEAAoBC;AAHY,qBAArB,CAAN;;;AAAZsB,6B;;yBAMF,KAAKhD,QAAL,CAAcoB,EAAd,CAAiB,QAAjB,C;;;;;sDAGK;AACLI,8BAAQ,EAAEwB,SAAS,CAACC,GADf;AAELtB,iCAAW,EAAE,0DAAUuB,cAAV,CAAyBF,SAAS,CAACC,GAAnC;AAFR,qB;;;sDAQA;AACLzB,8BAAQ,EAAEoB,QADL;AAELjB,iCAAW,EAAEc,WAAW,CAACU;AAFpB,qB;;;;;;;;;AAKV,S,CAED;;;;qCAC2BV,W,EAA0B;;;;;;;yBAE/C,KAAKzC,QAAL,CAAcoB,EAAd,CAAiB,QAAjB,C;;;;;;AAEW,2BAAMvB,UAAU,CAACyB,QAAX,CAAoB;AACrCC,0BAAI,EAAEkB,WAAW,CAAClB;AADmB,qBAApB,CAAN;;;AAAP6B,wB;sDAICA,IAAI,CAACxB,I;;;;AAIK,2BAAMyB,KAAK,CAACZ,WAAW,CAACU,OAAb,CAAX;;;AAAXG,4B;;AACO,2BAAMA,QAAQ,CAAClD,IAAT,EAAN;;;AAAPA,wB;;AAEC,2BAAM,KAAKD,mBAAL,CAAyBC,IAAzB,CAAN;;;;;;;;;;;;AAEV,S,CAED;;;;sCAC2BiB,K,EAAckC,Q,EAAkB;;;;;;;AACzD;AACA,yBAAKtD,MAAL,CAAYuD,MAAZ,CAAmBD,QAAnB,EAA6B,CAA7B,E,CAEA;;AACAzD,2BAAO,CAACwC,GAAR,CAAY;AACVvB,yBAAG,EAAE,KAAKb,aADA;AAEViB,2BAAK,EAAEF,IAAI,CAACsB,SAAL,CAAe,KAAKtC,MAApB;AAFG,qBAAZ,E,CAKA;;AACMwD,4B,GAAWpC,KAAK,CAACG,QAAN,CAAekC,MAAf,CAAsBrC,KAAK,CAACG,QAAN,CAAemC,WAAf,CAA2B,GAA3B,IAAkC,CAAxD,C;;AACjB,2BAAM9D,UAAU,CAAC+D,UAAX,CAAsB;AAC1BrC,0BAAI,EAAEkC,QADoB;AAE1BhC,+BAAS,EAAE,oEAAoBC;AAFL,qBAAtB,CAAN;;;;;;;;;AAID;;;;;;;uBApJU3B,Y,EAAY,+G;AAAA,K;;;aAAZA,Y;AAAY,eAAZA,YAAY,K;AAAA,kBAFX;;;;;sEAEDA,Y,EAAY;cAHxB,wDAGwB;eAHb;AACV8D,oBAAU,EAAE;AADF,S;AAGa,Q;;;;;;;;;;;;;;;;;;;;;;ACTzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAkBaC,c;;;;;YAAAA;;;;yBAAAA,c;AAAc,O;AAAA,gBAThB,CACP,0DADO,EAEP,4DAFO,EAGP,0DAHO,EAIP,2GAJO,EAKP,6DAAaC,QAAb,CAAsB,CAAC;AAAExC,YAAI,EAAE,EAAR;AAAYyC,iBAAS,EAAE;AAAvB,OAAD,CAAtB,CALO,CASgB;;;;0HAAdF,c,EAAc;AAAA,uBAFV,mDAEU;AAFF,kBANrB,0DAMqB,EALrB,4DAKqB,EAJrB,0DAIqB,EAHrB,2GAGqB,EAHU,4DAGV;AAEE,O;AALQ,K;;;;;sEAKtBA,c,EAAc;cAV1B,sDAU0B;eAVjB;AACRG,iBAAO,EAAE,CACP,0DADO,EAEP,4DAFO,EAGP,0DAHO,EAIP,2GAJO,EAKP,6DAAaF,QAAb,CAAsB,CAAC;AAAExC,gBAAI,EAAE,EAAR;AAAYyC,qBAAS,EAAE;AAAvB,WAAD,CAAtB,CALO,CADD;AAQRE,sBAAY,EAAE,CAAC,mDAAD;AARN,S;AAUiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDvB;;AACE;;AAAmC;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAA2C;;AAChF;;;;;;AADW;;AAAA;;;;QCRFC,Q;AAEX,wBACSC,YADT,EAESC,qBAFT,EAGUC,GAHV,EAGiCC,eAHjC,EAGuE;AAAA;;AAF9D,aAAAH,YAAA,GAAAA,YAAA;AACA,aAAAC,qBAAA,GAAAA,qBAAA;AACC,aAAAC,GAAA,GAAAA,GAAA;AAAuB,aAAAC,eAAA,GAAAA,eAAA;AAC3B;;;;mCAEW;;;;;;;AACf,2BAAM,KAAKH,YAAL,CAAkBI,SAAlB,EAAN;;;;;;;;;AACD;;;wCAE4BnD,K,EAAckC,Q,EAAkB;;;;;;;;;;AACvC,2BAAM,KAAKc,qBAAL,CAA2BI,MAA3B,CAAkC;AAC1DC,4BAAM,EAAE,QADkD;AAE1DC,6BAAO,EAAE,CAAC;AACRC,4BAAI,EAAE,QADE;AAERC,4BAAI,EAAE,aAFE;AAGRC,4BAAI,EAAE,OAHE;AAIRC,+BAAO,EAAE,mBAAM;AACb,+BAAI,CAACX,YAAL,CAAkBY,aAAlB,CAAgC3D,KAAhC,EAAuCkC,QAAvC;AACD;AANO,uBAAD,EAON;AACDqB,4BAAI,EAAE,QADL;AAEDE,4BAAI,EAAE,OAFL;AAGDD,4BAAI,EAAE,QAHL;AAIDE,+BAAO,EAAE,mBAAM,CACb;AACA;AAND,uBAPM;AAFiD,qBAAlC,CAAN;;;AAAdE,+B;;AAkBN,2BAAMA,WAAW,CAACC,OAAZ,EAAN;;;;;;;;;AACD;;;4CAEyB;;;;;;;;;AAClBP,2B,GAAU,CACd;AACEC,0BAAI,EAAE,YADR;AAEEE,0BAAI,EAAE,QAFR;AAGEC,6BAAO,EAAE,mBAAM;AACb;AACA,8BAAI,CAACX,YAAL,CAAkBe,eAAlB;AACD;AANH,qBADc,EASd;AACEP,0BAAI,EAAE,0BADR;AAEEE,0BAAI,EAAE,OAFR;AAGEC,6BAAO,EAAE,mBAAM;AACb;AACA,8BAAI,CAACX,YAAL,CAAkBgB,iBAAlB;AACD;AANH,qBATc,C;;AAmBI,2BAAM,KAAKb,eAAL,CAAqBE,MAArB,CAA4B;AACpDC,4BAAM,EAAE,qBAD4C;AAEpDC,6BAAO,EAAPA;AAFoD,qBAA5B,CAAN;;;AAAdM,+B;;AAIN,2BAAMA,WAAW,CAACC,OAAZ,EAAN;;;;;;;;;AACD;;;;;;;uBA3DUf,Q,EAAQ,qI,EAAA,qI,EAAA,wH,EAAA,qI;AAAA,K;;;YAARA,Q;AAAQ,+B;AAAA,e;AAAA,a;AAAA,uT;AAAA;AAAA;ADVrB;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AAAwB;;AAAa;;AACvC;;AACF;;AAEA;;AACE;;AACA;;AAGA;;AACF;;AAEA;;AACE;;AAAgB;AAAA,mBAAS,IAAAC,YAAA,kBAAT;AAAuC,WAAvC;;AACd;;AACF;;AACF;;AACA;;AACE;;AAAgB;AAAA,mBAAS,IAAAiB,iBAAA,EAAT;AAA4B,WAA5B;;AACd;;AACF;;AACF;;AACF;;;;AAhBsB;;AAAA;;;;;;;;;sECPTlB,Q,EAAQ;cALpB,uDAKoB;eALV;AACTmB,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,gBAFJ;AAGTC,mBAAS,EAAE,CAAC,gBAAD;AAHF,S;AAKU,Q","file":"tab2-tab2-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Plugins, CameraResultType, Capacitor, FilesystemDirectory, CameraPhoto, CameraSource } from '@capacitor/core';\r\nimport { Platform } from '@ionic/angular';\r\n\r\nconst { Camera, Filesystem, Storage } = Plugins;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PhotoService {\r\n  public photos: Photo[] = [];\r\n  private PHOTO_STORAGE: string = \"photos\";\r\n  private platform: Platform;\r\n\r\n  constructor(platform: Platform) {\r\n    this.platform = platform;\r\n   }\r\n\r\n  public async loadSaved() {\r\n    // Retrieve cached photo array data\r\n    const photoList = await Storage.get({ key: this.PHOTO_STORAGE });\r\n    this.photos = JSON.parse(photoList.value) || [];\r\n\r\n    // If running on the web...\r\n    if (!this.platform.is('hybrid')) {\r\n      // Display the photo by reading into base64 format\r\n      for (let photo of this.photos) {\r\n        // Read each saved photo's data from the Filesystem\r\n        const readFile = await Filesystem.readFile({\r\n            path: photo.filepath,\r\n            directory: FilesystemDirectory.Data\r\n        });\r\n      \r\n        // Web platform only: Load the photo as base64 data\r\n        photo.webviewPath = `data:image/jpeg;base64,${readFile.data}`;\r\n      }\r\n    }\r\n  }\r\n\r\n  /* Use the device camera to take a photo:\r\n  // https://capacitor.ionicframework.com/docs/apis/camera\r\n  \r\n  // Store the photo data into permanent file storage:\r\n  // https://capacitor.ionicframework.com/docs/apis/filesystem\r\n  \r\n  // Store a reference to all photo filepaths using Storage API:\r\n  // https://capacitor.ionicframework.com/docs/apis/storage\r\n  */\r\n  public async addNewToGallery() {\r\n    // Take a photo\r\n    const capturedPhoto = await Camera.getPhoto({\r\n      resultType: CameraResultType.Uri, // file-based data; provides best performance\r\n      source: CameraSource.Camera, // automatically take a new photo with the camera\r\n      quality: 100 // highest quality (0 to 100)\r\n    });\r\n    \r\n    const savedImageFile = await this.savePicture(capturedPhoto);\r\n\r\n    // Add new photo to Photos array\r\n    this.photos.unshift(savedImageFile);\r\n\r\n    // Cache all photo data for future retrieval\r\n    Storage.set({\r\n      key: this.PHOTO_STORAGE,\r\n      value: JSON.stringify(this.photos)\r\n    });\r\n  }\r\n\r\n  async addNewFromGallery() {\r\n    // Take a photo\r\n    const capturedPhoto = await Camera.getPhoto({\r\n      resultType: CameraResultType.Uri, // file-based data; provides best performance\r\n      source: CameraSource.Photos, // image from gallery\r\n      quality: 100 // highest quality (0 to 100)\r\n    });\r\n    \r\n    const savedImageFile = await this.savePicture(capturedPhoto);\r\n\r\n    // Add new photo to Photos array\r\n    this.photos.unshift(savedImageFile);\r\n\r\n    // Cache all photo data for future retrieval\r\n    Storage.set({\r\n      key: this.PHOTO_STORAGE,\r\n      value: JSON.stringify(this.photos)\r\n    });\r\n \r\n  }\r\n\r\n  // Save picture to file on device\r\n  private async savePicture(cameraPhoto: CameraPhoto) {\r\n    // Convert photo to base64 format, required by Filesystem API to save\r\n    const base64Data = await this.readAsBase64(cameraPhoto);\r\n\r\n    // Write the file to the data directory\r\n    const fileName = new Date().getTime() + '.jpeg';\r\n    const savedFile = await Filesystem.writeFile({\r\n      path: fileName,\r\n      data: base64Data,\r\n      directory: FilesystemDirectory.Data\r\n    });\r\n\r\n    if (this.platform.is('hybrid')) {\r\n      // Display the new image by rewriting the 'file://' path to HTTP\r\n      // Details: https://ionicframework.com/docs/building/webview#file-protocol\r\n      return {\r\n        filepath: savedFile.uri,\r\n        webviewPath: Capacitor.convertFileSrc(savedFile.uri),\r\n      };\r\n    }\r\n    else {\r\n      // Use webPath to display the new image instead of base64 since it's \r\n      // already loaded into memory\r\n      return {\r\n        filepath: fileName,\r\n        webviewPath: cameraPhoto.webPath\r\n      };\r\n    }\r\n  }\r\n\r\n  // Read camera photo into base64 format based on the platform the app is running on\r\n  private async readAsBase64(cameraPhoto: CameraPhoto) {\r\n    // \"hybrid\" will detect Cordova or Capacitor\r\n    if (this.platform.is('hybrid')) {\r\n      // Read the file into base64 format\r\n      const file = await Filesystem.readFile({\r\n        path: cameraPhoto.path\r\n      });\r\n\r\n      return file.data;\r\n    }\r\n    else {\r\n      // Fetch the photo, read as a blob, then convert to base64 format\r\n      const response = await fetch(cameraPhoto.webPath!);\r\n      const blob = await response.blob();\r\n\r\n      return await this.convertBlobToBase64(blob) as string;  \r\n    }\r\n  }\r\n\r\n  // Delete picture by removing it from reference data and the filesystem\r\n  public async deletePicture(photo: Photo, position: number) {\r\n    // Remove this photo from the Photos reference data array\r\n    this.photos.splice(position, 1);\r\n\r\n    // Update photos array cache by overwriting the existing photo array\r\n    Storage.set({\r\n      key: this.PHOTO_STORAGE,\r\n      value: JSON.stringify(this.photos)\r\n    });\r\n\r\n    // delete photo file from filesystem\r\n    const filename = photo.filepath.substr(photo.filepath.lastIndexOf('/') + 1);\r\n    await Filesystem.deleteFile({\r\n      path: filename,\r\n      directory: FilesystemDirectory.Data\r\n    });\r\n  }\r\n\r\n  convertBlobToBase64 = (blob: Blob) => new Promise((resolve, reject) => {\r\n    const reader = new FileReader;\r\n    reader.onerror = reject;\r\n    reader.onload = () => {\r\n        resolve(reader.result);\r\n    };\r\n    reader.readAsDataURL(blob);\r\n  });\r\n}\r\n\r\nexport interface Photo {\r\n  filepath: string;\r\n  webviewPath: string;\r\n}\r\n","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab2Page } from './tab2.page';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ExploreContainerComponentModule,\n    RouterModule.forChild([{ path: '', component: Tab2Page }])\n  ],\n  declarations: [Tab2Page]\n})\nexport class Tab2PageModule {}\n","<ion-header>\r\n  <ion-toolbar>\r\n    <ion-title>\r\n      Photo Gallery\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <ion-header collapse=\"condense\">\r\n    <ion-toolbar>\r\n      <ion-title size=\"large\">Photo Gallery</ion-title>\r\n    </ion-toolbar>\r\n  </ion-header>\r\n\r\n  <ion-grid>\r\n    <ion-row>\r\n    <ion-col size=\"6\" *ngFor=\"let photo of photoService.photos; index as position\">\r\n      <ion-img [src]=\"photo.webviewPath\" (click)=\"showActionSheet(photo, position)\"></ion-img>\r\n    </ion-col>\r\n    </ion-row>\r\n  </ion-grid>\r\n\r\n  <ion-fab vertical=\"bottom\" horizontal=\"center\" slot=\"fixed\">\r\n    <ion-fab-button (click)=\"photoService.addNewToGallery()\">\r\n      <ion-icon name=\"camera\"></ion-icon>\r\n    </ion-fab-button>\r\n  </ion-fab>\r\n  <ion-fab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\r\n    <ion-fab-button (click)=\"selectImageSource()\">\r\n      <ion-icon name=\"add\"></ion-icon>\r\n    </ion-fab-button>\r\n  </ion-fab>\r\n</ion-content>\r\n","import { Component } from '@angular/core';\r\nimport { Platform, ActionSheetController } from '@ionic/angular';\r\nimport { Plugins, CameraResultType, CameraSource } from '@capacitor/core';\r\nimport { Photo, PhotoService } from '../services/photo.service';\r\n\r\n@Component({\r\n  selector: 'app-tab2',\r\n  templateUrl: 'tab2.page.html',\r\n  styleUrls: ['tab2.page.scss']\r\n})\r\nexport class Tab2Page {\r\n\r\n  constructor(\r\n    public photoService: PhotoService, \r\n    public actionSheetController: ActionSheetController, \r\n    private plt: Platform, private actionSheetCtrl: ActionSheetController\r\n    ) {}\r\n\r\n  async ngOnInit() {\r\n    await this.photoService.loadSaved();\r\n  }\r\n\r\n  public async showActionSheet(photo: Photo, position: number) {\r\n    const actionSheet = await this.actionSheetController.create({\r\n      header: 'Photos',\r\n      buttons: [{\r\n        text: 'Delete',\r\n        role: 'destructive',\r\n        icon: 'trash',\r\n        handler: () => {\r\n          this.photoService.deletePicture(photo, position);\r\n        }\r\n      }, {\r\n        text: 'Cancel',\r\n        icon: 'close',\r\n        role: 'cancel',\r\n        handler: () => {\r\n          // Nothing to do, action sheet is automatically closed\r\n         }\r\n      }]\r\n    });\r\n    await actionSheet.present();\r\n  }\r\n\r\n  async selectImageSource() {\r\n    const buttons = [\r\n      {\r\n        text: 'Take Photo',\r\n        icon: 'camera',\r\n        handler: () => {\r\n          //this.addImage(CameraSource.Camera);\r\n          this.photoService.addNewToGallery();\r\n        }\r\n      },\r\n      {\r\n        text: 'Choose From Photos Photo',\r\n        icon: 'image',\r\n        handler: () => {\r\n          //this.addImage(CameraSource.Photos);\r\n          this.photoService.addNewFromGallery();\r\n        }\r\n      }\r\n    ];\r\n \r\n    const actionSheet = await this.actionSheetCtrl.create({\r\n      header: 'Select Image Source',\r\n      buttons\r\n    });\r\n    await actionSheet.present();\r\n  }\r\n}\r\n"]}