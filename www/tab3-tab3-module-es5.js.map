{"version":3,"sources":["webpack:///src/app/tab3/tab3.module.ts","webpack:///src/app/tab3/tab3.page.ts","webpack:///src/app/tab3/tab3.page.html"],"names":["Tab3PageModule","forChild","path","component","imports","declarations","Tab3Page","nativeGeocoder","location_text","getLocation","getCurrentPosition","position","latitude","coords","longitude","options","useLocale","maxResults","reverseGeocode","then","result","console","log","JSON","stringify","error","reverse","selector","templateUrl","styleUrls"],"mappings":"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","file":"tab3-tab3-module-es5.js","sourcesContent":["import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab3Page } from './tab3.page';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ExploreContainerComponentModule,\n    RouterModule.forChild([{ path: '', component: Tab3Page }])\n  ],\n  declarations: [Tab3Page]\n})\nexport class Tab3PageModule {}\n","import { Component } from '@angular/core';\nimport { Geolocation} from '@capacitor/core';\nimport { NativeGeocoder, NativeGeocoderResult, NativeGeocoderOptions } from '@ionic-native/native-geocoder/ngx';\n\n@Component({\n  selector: 'app-tab3',\n  templateUrl: 'tab3.page.html',\n  styleUrls: ['tab3.page.scss']\n})\nexport class Tab3Page {\n  latitude: number;\n  longitude: number;\n  location_text: any = {};\n  constructor(\n    private nativeGeocoder: NativeGeocoder\n  ) {\n    this.getLocation();\n  }\n\n  async getLocation() {\n    const position = await Geolocation.getCurrentPosition();\n    this.latitude = position.coords.latitude;\n    this.longitude = position.coords.longitude;\n  }\n\n  reverse(){\n    let options: NativeGeocoderOptions = {\n      useLocale: true,\n      maxResults: 5\n    };\n    this.nativeGeocoder.reverseGeocode(this.latitude, this.longitude, options)\n      .then(\n        (result: NativeGeocoderResult[]) => {\n          this.location_text = result[0];\n          console.log(JSON.stringify(result[0]));\n        }).catch((error: any) => console.log(error));\n  }\n\n  /*\nthis.storageService.get('assets_inspected').then(result => {\n        if (result != null) {\n          const listResult: any = result;\n          this.data.total_assets_inspected = listResult.length;\n          console.log(\"total inspected : \" + this.data.total_assets_inspected);\n        }else {\n          this.data.total_assets_inspected = 0;\n        }\n        }).catch(e => {\n        console.log('error: ', e);\n        });\n  */\n\n}\n","<ion-header>\n  <ion-toolbar>\n    <ion-title>\n      Borang Aduan\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-card>\n    <ion-card-header>\n      <ion-card-title>Coordinates</ion-card-title>\n    </ion-card-header>\n    <ion-card-content>\n      <ion-item>Latitude: {{ latitude }}</ion-item>\n      <ion-item>Longitude: {{ longitude }}</ion-item>\n    </ion-card-content>\n  </ion-card>\n\n  <ion-item>\n    <ion-button (click)=\"reverse()\">get location</ion-button>\n  </ion-item>\n\n  <ion-item>\n    <ion-list>Poskod : {{ location_text.postalCode }}</ion-list>\n  </ion-item>\n\n  <ion-item>\n    <ion-list>Negara : {{ location_text.countryName }}</ion-list>\n  </ion-item>\n\n  <ion-item>\n    <ion-label position=\"floating\">Butiran Aduan</ion-label>\n    <ion-textarea rows=\"6\" cols=\"20\" placeholder=\"Butiran Aduan\"></ion-textarea>\n  </ion-item>\n\n  <ion-item>\n    <ion-button>Hantar</ion-button>\n  </ion-item>\n</ion-content>\n"]}